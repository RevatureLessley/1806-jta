Use the servlet-url mapping for url when hitting it with AJAX.
JSON.parse converts a JSON string to object.
JSON.stringify converts JSON obect to string.

AJAX:
	XmlHttpRequest.open("POST", url);
	xhr.setRequestHeader("Content-type", "application/x-www-force-urlencoded");
	xhr.send("param1=value1&param2=value2");

Servlet:
	request.getParameter("param1");

AngularJS -> Angular2 -> Angular4 -> Angular5 -> Angular6
-client side model view controller framework
	-design pattern
		--view: html
		--model: data
		--controller: business logic
-annotations are called declarators, they provide metadata for bundling/compiling/deploying applications

npm install --save bootstrap <- saves bootstrap locally

Angular Project Structure
	src <- global config, needs server restart
		app <- global app config, does not need server restart
			app_modules
		styles.css
		main.ts
	angular.json
	styles.css

Angular componenets represents a section of an application. Multiple componenets are brought together into a module to make an appllication. It helps nid a view with a controller.

Any annotated words are declarators that serve to provide metadata for the Angular application. @Component indicates its contents should be used for the entire component bundle.

Selector is needed to inject views. It indicates what the tag name should be for the injection site for this component.

Template URLs point to a specific file to ne used as the front end for the specific component.

Style URLs point to CSS files besides the global CSS to customize each individual component. Use an array for this.

All componenets require a class for identification, allowing the import component to use it for the application. It also provides a section for storing/retreiving data from the frontend and backend of the client side.

ng g c components/interpolation <- generates component at a location

Databinding connects the view to the components. String Interpolation transfers data from components to views, which is called model. It uses {{}} Interpolation is like an expression language {{2 + 2}} evaluates to 4.

npm install <- installs node_modules

Property binding also brings data from components to views. It makes the value of some element property equal to a result as defined in the typescript file. It uses []. 

String Interpolation is usedful for evaluating data from the component and displaying on the view. Property binding is useful for taking values from components and applying them as properties to elements.

Event Binding goes from the view to the components. It takes an action from HTML and call a function in a component. It uses ().

Databinding is the exchange of data between the view and the component.
     
One-Way vs Two-Way
-one way: data exchange from view to component or from component to view exclusively.
	  property []
	  event ()
	  interpolation {{}}
-two way: passing and receiving data  in both direction simultaneously.
	  {(ngModel)}

View --> Component: Event Binding
Component --> View: Property Binding, String Interpolation
View <--> Component: ngModel

